#!/usr/bin/env python26

import Image, ExifTags
import sys
from cStringIO import StringIO

# (w, h)
size = (448, 448)
output_ratio = size[0] / size[1]

if __name__ == '__main__':

    #load the image
    input = StringIO(sys.stdin.read())
    img = Image.open(input)

    #find the orientation tag
    for orientation in ExifTags.TAGS.keys():
        if ExifTags.TAGS[orientation] == 'Orientation':
            break
    #grab the image's exif data
    exif = hasattr(img, '_getexif') and img._getexif()
    #if the exif data is present, check for rotation data we need
    #to handle
    if exif:
        exif = exif.items()
        exif = dict(exif)
        if orientation in exif:
            if exif[orientation] == 3:
                img = img.rotate(180, Image.BICUBIC, True)
            elif exif[orientation] == 6:
                img = img.rotate(270, Image.BICUBIC, True)
            elif exif[orientation] == 8:
                img = img.rotate(90, Image.BICUBIC, True)

    #force rgb format
    if img.mode != 'RGB':
        img = img.convert('RGB')

    w, h = img.size
    w = int(w)
    h = int(h)

    #do the crop
    if (float(w) / h) > output_ratio:
      n = int((h * size[0]) / size[1])
      n2 = int((w - n) / 2.0)
      img = img.crop((n2, 0, n2 + n, h))
    else:
      n = int((w * size[1]) / size[0])
      n2 = int((h - n) / 2.0)
      img = img.crop((0, n2, w, n2 + n))

    #resize
    img = img.resize(size, Image.ANTIALIAS)

    #output
    img.save(sys.stdout, 'JPEG')


